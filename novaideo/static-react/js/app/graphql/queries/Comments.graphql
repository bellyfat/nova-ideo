#import "../fragments/Action.graphql"
#import "../fragments/Comment.graphql"

query Comments(
  $first: Int!
  $after: String!
  $filter: FilterInput!
  $pinned: Boolean!
  $file: Boolean!
  $id: ID!
  $subjectActionsNodeIds: [String]
  $processIds: [String]
  $nodeIds: [String]
  $processTags: [String]
  $actionTags: [String]
) {
  node(id: $id) {
    ... on Channel {
      id
      oid
      title
      lenComments
      isDiscuss
      unreadComments {
        id
        oid
      }
      subject {
        ... on IEntity {
          id
          oid
          title
          actions(nodeIds: $subjectActionsNodeIds) {
            ...Action
          }
        }
        ... on Person {
          picture {
            id
            url
            variations
          }
        }
        ... on Idea {
          author {
            id
            oid
            title
            isAnonymous
            picture {
              id
              url
              variations
            }
          }
        }
      }
      comments(first: $first, after: $after, filter: $filter, pinned: $pinned, file: $file) {
        totalCount
        pageInfo {
          endCursor
          hasNextPage
        }
        edges {
          node {
            ...Comment
          }
        }
      }
    }
  }
}
